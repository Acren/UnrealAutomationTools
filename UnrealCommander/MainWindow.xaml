<Window x:Class="UnrealCommander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnrealCommander"
        xmlns:common="clr-namespace:UnrealAutomationCommon;assembly=UnrealAutomationCommon"
        xmlns:operations="clr-namespace:UnrealAutomationCommon.Operations;assembly=UnrealAutomationCommon"
        xmlns:operationTypes="clr-namespace:UnrealAutomationCommon.Operations.OperationTypes;assembly=UnrealAutomationCommon"
        xmlns:unreal="clr-namespace:UnrealAutomationCommon.Unreal;assembly=UnrealAutomationCommon"
        mc:Ignorable="d"
        Title="Unreal Commander" Height="800" Width="1200"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Closing="Window_Closing">
    <DockPanel LastChildFill="True">
        <DataGrid Name="ProjectGrid" ItemsSource="{ Binding PersistentState.Projects}" SelectedItem="{Binding Path=SelectedProject, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="True" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0" DockPanel.Dock="Top" Height="Auto">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove" Click="ProjectRemoveClick" />
                    <MenuItem Header="Open Directory" Click="ProjectOpenDirectory" />
                    <MenuItem Header="Open StagedBuild (WindowsNoEditor)" Click="ProjectOpenStagedBuildWindows" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="MouseDoubleClick" Handler="ProjectDoubleClick"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Project" IsReadOnly="True" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Path" IsReadOnly="True" Binding="{Binding UProjectPath}" Width="*"/>
                <DataGridTextColumn Header="Engine" IsReadOnly="True" Binding="{Binding ProjectDescriptor.EngineFriendlyName}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Name="PluginGrid" ItemsSource="{ Binding PersistentState.Plugins}" SelectedItem="{Binding Path=SelectedPlugin, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="True" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0" DockPanel.Dock="Top" Height="Auto">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove Plugin" Click="PluginRemoveClick" />
                    <MenuItem Header="Open Directory" Click="PluginOpenDirectory" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="MouseDoubleClick" Handler="PluginDoubleClick"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Plugin" IsReadOnly="True" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Path" IsReadOnly="True" Binding="{Binding UPluginPath}" Width="*"/>
                <DataGridTextColumn Header="Engine" IsReadOnly="True" Binding="{Binding PluginDescriptor.TrimmedEngineVersion}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Margin="10,10,10,10" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Status}" Grid.Row="0" Margin="0,5"/>
            <WrapPanel Grid.Row="1">
                <GroupBox Header="Operation" Margin="0,5" Padding="10">
                    <StackPanel>
                        <ListBox ItemsSource="{Binding OperationTypes}" SelectedItem="{Binding Path=PersistentState.OperationType}" BorderBrush="Transparent" Background="Transparent">
                            <ListBox.Resources>
                                <local:TypeToStringConverter x:Key="TypeToStringConverter"/>
                                <local:OperationSupportedConverter x:Key="OperationSupportedConverter"/>
                            </ListBox.Resources>
                            <ListBox.ItemContainerStyle>
                                <!-- Style to get rid of the selection visual -->
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type operations:Operation}">
                                    <RadioButton Content="{Binding Converter={StaticResource TypeToStringConverter}}" GroupName="OperationTypes">
                                        <!-- Binding IsChecked to IsSelected requires no support code -->
                                        <RadioButton.IsChecked>
                                            <Binding Path="IsSelected"
                                                     RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                                     Mode="TwoWay" />
                                        </RadioButton.IsChecked>
                                        <RadioButton.IsEnabled>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsEnabled>
                                        <RadioButton.Focusable>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.Focusable>
                                        <RadioButton.IsHitTestVisible>
                                            <MultiBinding Converter="{StaticResource OperationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="PersistentState.OperationParameters.Target"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsHitTestVisible>
                                    </RadioButton>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Configuration" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <ListBox ItemsSource="{Binding BuildConfigurations}" SelectedItem="{Binding Path=PersistentState.OperationParameters.Configuration}" BorderBrush="Transparent" Background="Transparent">
                            <ListBox.Resources>
                                <local:EnumToStringConverter x:Key="EnumToStringConverter"/>
                                <local:ConfigurationSupportedConverter x:Key="ConfigurationSupportedConverter"/>
                            </ListBox.Resources>
                            <ListBox.ItemContainerStyle>
                                <!-- Style to get rid of the selection visual -->
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type unreal:BuildConfiguration}">
                                    <RadioButton Content="{Binding Converter={StaticResource EnumToStringConverter}}" GroupName="Configurations">
                                        <!-- Binding IsChecked to IsSelected requires no support code -->
                                        <RadioButton.IsChecked>
                                            <Binding Path="IsSelected"
                                                     RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                                     Mode="TwoWay" />
                                        </RadioButton.IsChecked>
                                        <RadioButton.IsEnabled>
                                            <MultiBinding Converter="{StaticResource ConfigurationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="SelectedEngineInstall"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                                <Binding Path="Operation"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsEnabled>
                                        <RadioButton.Focusable>
                                            <MultiBinding Converter="{StaticResource ConfigurationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="SelectedEngineInstall"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                                <Binding Path="Operation"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.Focusable>
                                        <RadioButton.IsHitTestVisible>
                                            <MultiBinding Converter="{StaticResource ConfigurationSupportedConverter}">
                                                <Binding />
                                                <Binding Path="SelectedEngineInstall"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                                <Binding Path="Operation"
                                                         RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                                            </MultiBinding>
                                        </RadioButton.IsHitTestVisible>
                                    </RadioButton>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Insights" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.TraceCpu, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Trace CPU" VerticalAlignment="Center" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.TraceFrame, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Trace Frame" VerticalAlignment="Center" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.TraceBookmark, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Trace Bookmark" VerticalAlignment="Center" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.TraceLoadTime, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Trace Load Time" VerticalAlignment="Center" />
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Flags" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.StompMalloc, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Stomp Malloc" VerticalAlignment="Center" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.WaitForAttach, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Wait for Attach" VerticalAlignment="Center" />
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Automation" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <CheckBox IsChecked="{Binding PersistentState.OperationParameters.RunTests}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Run tests:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBox Text="{Binding Path=SelectedProject.TestName, UpdateSourceTrigger=PropertyChanged}"  MinWidth="50" />
                            </StackPanel>
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            <GroupBox Header="Additional Arguments" Grid.Row="2" Margin="0,5" Padding="10">
                <TextBox Text="{Binding PersistentState.OperationParameters.AdditionalArguments, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </GroupBox>
            <GroupBox Header="Output" Grid.Row="3" Margin="0,5" Padding="10" >
                <ScrollViewer Name="OutputScrollViewer">
                    <RichTextBox Name="OutputTextBox" IsReadOnly="True" Background="#202020" Foreground="#EEEEEE" FontFamily="Consolas">
                        <RichTextBox.Resources>
                            <Style TargetType="{x:Type Paragraph}">
                                <Setter Property="Margin" Value="0"/>
                            </Style>
                        </RichTextBox.Resources>
                        <RichTextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Clear" Click="LogClear" />
                            </ContextMenu>
                        </RichTextBox.ContextMenu>
                    </RichTextBox>
                </ScrollViewer>
            </GroupBox>
            <GroupBox Header="Command" Grid.Row="4" Margin="0,5" Padding="10" >
                <TextBox Name="CommandTextBox" IsReadOnly="True" Text="{Binding VisibleCommand, Mode=OneWay}"  TextWrapping="Wrap" FontFamily="Consolas"></TextBox>
            </GroupBox>
            <WrapPanel Grid.Row="5" HorizontalAlignment="Right">
                <Button Click="CopyCommand" IsEnabled="{Binding CanExecute}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <TextBlock Text="Copy"></TextBlock>
                </Button>
                <Button Click="Execute" IsEnabled="{Binding CanExecute}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <Run Text="{Binding Operation.OperationName, Mode=OneWay}" />
                </Button>
                <Button Click="Terminate" IsEnabled="{Binding IsRunningOperation}" Margin="0,5,5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <Run Text="Terminate" />
                </Button>
            </WrapPanel>
        </Grid>
    </DockPanel>
</Window>
