<Window x:Class="UnrealCommander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnrealCommander"
        xmlns:common="clr-namespace:UnrealAutomationCommon;assembly=UnrealAutomationCommon"
        xmlns:operations="clr-namespace:UnrealAutomationCommon.Operations;assembly=UnrealAutomationCommon"
        xmlns:operationTypes="clr-namespace:UnrealAutomationCommon.Operations.OperationTypes;assembly=UnrealAutomationCommon"
        mc:Ignorable="d"
        Title="Unreal Commander" Height="800" Width="1200">
    <DockPanel LastChildFill="True">
        <DataGrid Name="ProjectGrid" AutoGenerateColumns="False" CanUserAddRows="True" SelectionChanged="ProjectGrid_SelectionChanged" Margin="0,0,0,0" HorizontalScrollBarVisibility="Hidden" DockPanel.Dock="Top" Height="Auto">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove" Click="ProjectRemoveClick" />
                    <MenuItem Header="Open Directory" Click="ProjectOpenDirectory" />
                    <MenuItem Header="Open StagedBuild (WindowsNoEditor)" Click="ProjectOpenStagedBuildWindows" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="MouseDoubleClick" Handler="ProjectDoubleClick"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Project" IsReadOnly="True" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Path" IsReadOnly="True" Binding="{Binding UProjectPath}" Width="*"/>
                <DataGridTextColumn Header="Engine" IsReadOnly="True" Binding="{Binding ProjectDescriptor.EngineFriendlyName}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Name="PluginGrid" AutoGenerateColumns="False" CanUserAddRows="True" SelectionChanged="PluginGrid_SelectionChanged" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0" DockPanel.Dock="Top" Height="Auto">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove Plugin" Click="PluginRemoveClick" />
                    <MenuItem Header="Open Directory" Click="PluginOpenDirectory" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <EventSetter Event="MouseDoubleClick" Handler="PluginDoubleClick"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Plugin" IsReadOnly="True" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Path" IsReadOnly="True" Binding="{Binding UPluginPath}" Width="*"/>
                <DataGridTextColumn Header="Engine" IsReadOnly="True" Binding="{Binding PluginDescriptor.TrimmedEngineVersion}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Margin="10,10,10,10" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Status}" Grid.Row="0" Margin="0,5"/>
            <WrapPanel Grid.Row="1">
                <GroupBox Header="Operation" Grid.Row="1" Margin="0,5" Padding="10">
                    <StackPanel>
                        <StackPanel.Resources>
                            <local:ComparisonConverter x:Key="ComparisonConverter" />
                        </StackPanel.Resources>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:BuildEditorTarget}}">Build Editor Target</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:BuildEditor}}">Build Editor</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:LaunchEditor}}">Launch Editor</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:LaunchStandalone}}">Launch Standalone</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:PackageProject}}">Package Project</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:LaunchPackage}}">Launch Package</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Type operationTypes:BuildPlugin}}">Build Plugin</RadioButton>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Configuration" Grid.Row="2" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <local:ComparisonConverter x:Key="ComparisonConverter" />
                        </StackPanel.Resources>
                        <RadioButton IsChecked="{Binding Path=OperationParameters.Configuration, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static common:BuildConfiguration.Debug}}">Debug</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationParameters.Configuration, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static common:BuildConfiguration.DebugGame}}">DebugGame</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationParameters.Configuration, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static common:BuildConfiguration.Development}}">Development</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationParameters.Configuration, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static common:BuildConfiguration.Test}}">Test</RadioButton>
                        <RadioButton IsChecked="{Binding Path=OperationParameters.Configuration, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static common:BuildConfiguration.Shipping}}">Shipping</RadioButton>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Insights" Grid.Row="3" Margin="0,5" Padding="10">
                    <CheckBox IsChecked="{Binding OperationParameters.UseInsights, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                        <TextBlock Text="Run with Insights" VerticalAlignment="Center" />
                    </CheckBox>
                </GroupBox>
                <GroupBox Header="Flags" Grid.Row="4" Margin="0,5" Padding="10">
                    <StackPanel VerticalAlignment="Center">
                        <CheckBox IsChecked="{Binding OperationParameters.StompMalloc, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Stomp Malloc" VerticalAlignment="Center" />
                        </CheckBox>
                        <CheckBox IsChecked="{Binding OperationParameters.WaitForAttach, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                            <TextBlock Text="Wait for Attach" VerticalAlignment="Center" />
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
            </WrapPanel>
            <GroupBox Header="Output" Grid.Row="2" Margin="0,5" Padding="10" >
                <TextBox Name="OutputTextBox" IsReadOnly="True" Text="{Binding Output, Mode=OneWay}"  TextWrapping="Wrap" Background="#202020" Foreground="#EEEEEE" FontFamily="Consolas">
                    <TextBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Clear" Click="LogClear" />
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
            </GroupBox>
            <GroupBox Header="Command" Grid.Row="3" Margin="0,5" Padding="10" >
                <TextBox IsReadOnly="True" Text="{Binding VisibleCommand, Mode=OneWay}"  TextWrapping="Wrap" FontFamily="Consolas"></TextBox>
            </GroupBox>
            <WrapPanel Grid.Row="4" HorizontalAlignment="Right">
                <Button Click="CopyCommand" IsEnabled="{Binding CanExecute}" Margin="5,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <TextBlock Text="Copy"></TextBlock>
                </Button>
                <Button Click="Execute" IsEnabled="{Binding CanExecute}" Margin="0,5" Padding="20,2" Width="Auto" HorizontalAlignment="Right">
                    <Run Text="{Binding Operation.OperationName, Mode=OneWay}" />
                </Button>
            </WrapPanel>
        </Grid>
    </DockPanel>
</Window>
